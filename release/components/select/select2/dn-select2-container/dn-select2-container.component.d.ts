import { ElementRef, EventEmitter, OnInit } from '@angular/core';
import { ControlValueAccessor, FormGroup } from '@angular/forms';
import { Observable } from 'rxjs/Observable';
import { DnSelect2Item } from '../dn-select2-item';
import { DnSelect2Component } from '../dn-select2.component';
import { DnSelect2Service } from '../dn-select2.service';
export declare class DnSelect2ContainerComponent implements ControlValueAccessor, OnInit {
    private disabled;
    private _el;
    formErrors: any;
    formControlName: any;
    isDisabled: boolean;
    onSelect: EventEmitter<DnSelect2Item>;
    onRemove: EventEmitter<DnSelect2Item>;
    form: FormGroup;
    minimumInputLength: number;
    placeholder: string;
    multiple: boolean;
    serviceUrl: string;
    label: string;
    name: string;
    message: any[];
    labelRow: number;
    inputRow: number;
    inputRowCss: string;
    inputCss: string;
    number: boolean;
    referenceMode: 'entity' | 'id';
    private termLabel;
    private termSelect;
    displaySelect: (_: DnSelect2Item) => string;
    selectedText: (_: DnSelect2Item) => string;
    private innerValue;
    private validationMessages;
    private onTouchedCallback;
    private onChangeCallback;
    private control;
    constructor(_formControlName: any, disabled: any, _el: ElementRef);
    value: any;
    getSelect2(): DnSelect2Component<any>;
    getService(): DnSelect2Service;
    initializeValidationData(): void;
    ngOnInit(): void;
    onBlur(): void;
    onItemSelected(item: DnSelect2Item): void;
    onRemoveEvent(item: DnSelect2Item): void;
    onSelectEvent(item: DnSelect2Item): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    subscribeToResults(observable: Observable<string>): void;
    writeValue(value: any): void;
    private css();
}
