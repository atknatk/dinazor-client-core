import { ElementRef, OnInit } from '@angular/core';
import { ControlValueAccessor, FormControl, FormGroup } from '@angular/forms';
import 'inputmask/dist/inputmask/inputmask.date.extensions';
import 'inputmask/dist/inputmask/inputmask.extensions';
import 'inputmask/dist/inputmask/inputmask.phone.extensions';
import { Observable } from 'rxjs/Observable';
export declare class DnSmartInputComponent implements ControlValueAccessor, OnInit {
    formControlName: any;
    disabled: any;
    private el;
    term: FormControl;
    form: FormGroup;
    mask: any;
    labelShow: boolean;
    name: string;
    message: any[];
    col: number;
    placeholder: string;
    icon: string;
    inputCss: string;
    number: boolean;
    isDisabled: boolean;
    private termLabel;
    private termInput;
    private innerValue;
    private formErrors;
    private validationMessages;
    private onTouchedCallback;
    private onChangeCallback;
    private formControl;
    constructor(formControlName: any, disabled: any, el: ElementRef);
    readonly nativeElement: any;
    value: any;
    css(): void;
    initMask(): void;
    keyPress(event: any): void;
    ngOnInit(): void;
    onBlur(): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabled(): void;
    subscribeToResults(observable: Observable<string>): void;
    writeValue(value: any): void;
    private extendMask();
    private getDatetime(onincomplete);
    private subscribeToChangesAndLoadDataFromObservable();
}
